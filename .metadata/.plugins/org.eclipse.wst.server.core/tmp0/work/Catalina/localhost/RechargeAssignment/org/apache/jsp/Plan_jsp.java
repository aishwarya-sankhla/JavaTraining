/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.8
 * Generated at: 2018-10-08 10:50:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.util.stream.*;

public final class Plan_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

String mobileNumber; 
String plan; 
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.util.stream");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html >\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("#left{\r\n");
      out.write("float:left;\r\n");
      out.write("margin-left:70px;\r\n");
      out.write("}\r\n");
      out.write("#right{\r\n");
      out.write("margin-left:400px;\r\n");
      out.write("}\r\n");
      out.write("table,td{\r\n");
      out.write("border: 1px solid black;\r\n");
      out.write("cell-spacing:60px; \r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"left\" class=\"col-md-4\" style=\"height: 50%; width: 40%; float:left;\">\r\n");
      out.write("\t<h3>Plans</h3>\r\n");
      out.write("\t<table>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("    <th>Plan</th>\r\n");
      out.write("    <th>Features</th> \r\n");
      out.write("    <th>Price</th>\r\n");
      out.write("  </tr>\r\n");
      out.write("  \r\n");
      out.write("  <tr>\r\n");
      out.write("    <td>STV 17</td>\r\n");
      out.write("    <td>250MB for 6days</td>\r\n");
      out.write("    <td>17</td>\r\n");
      out.write("  </tr>\r\n");
      out.write("  <tr>\r\n");
      out.write("    <td>Roaming12</td>\r\n");
      out.write("    <td>Get free roaming for 30 days</td>\r\n");
      out.write("    <td>56</td>\r\n");
      out.write("  </tr>\r\n");
      out.write("  <tr>\r\n");
      out.write("    <td>STV333</td>\r\n");
      out.write("    <td>Unlimited calls for 30 days, 2.5GB/day data(Validity:4 months) </td>\r\n");
      out.write("    <td>333</td>\r\n");
      out.write("  </tr>\r\n");
      out.write("  <tr>\r\n");
      out.write("    <td>STV156</td>\r\n");
      out.write("    <td>1.5GB/day for 19 days</td>\r\n");
      out.write("    <td>156</td>\r\n");
      out.write("  </tr>\r\n");
      out.write("  <tr>\r\n");
      out.write("    <td>Combo offer</td>\r\n");
      out.write("    <td>Get 2GB data/day(Validity:2 months),Unlimited calls</td>\r\n");
      out.write("    <td>555</td>\r\n");
      out.write("  </tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("<div id=\"right\" class=\"col-md-4\">\r\n");
      out.write("\t<h3>Recharge</h3>\r\n");
      out.write("<form class=\"form\" action=\"RechargeServlet\">\r\n");
      out.write("\t<label>Mobile Number</label>\r\n");
      out.write("\t<input type=\"text\" name=\"mobilenum\" class=\"form-control\" required=\"required\" value=\"");
      out.print(mobileNumber );
      out.write("\"/><br /><br />\r\n");
      out.write("\t<label>Select Plan</label>\r\n");
      out.write("\t<select name=\"selectplan\" class=\"form-control\">\r\n");
      out.write("\t\t<option value=\"STV17\" ");
if((plan!=null)&&plan.equals("STV17")){out.print("selected=selected");} 
      out.write(">STV17</option>\r\n");
      out.write("\t\t<option value=\"Roaming12\" ");
if((plan!=null)&&plan.equals("Roaming12")){out.print("selected=selected");} 
      out.write(">Roaming12</option>\r\n");
      out.write("\t\t<option value=\"STV333\" ");
if((plan!=null)&&plan.equals("STV333")){out.print("selected=selected");} 
      out.write(">STV333</option>\r\n");
      out.write("\t\t<option value=\"STV156\" ");
if((plan!=null)&&plan.equals("STV156")){out.print("selected=selected");} 
      out.write(">STV156</option>\r\n");
      out.write("\t\t<option value=\"ComboOffer\" ");
if((plan!=null)&&plan.equals("ComboOffer")){out.print("selected=selected");} 
      out.write(">Combo offer</option>\r\n");
      out.write("\t</select><br /><br />\r\n");
      out.write("\t<label>Amount</label>\r\n");
      out.write("\t<input type=\"text\"  name=\"amt\" class=\"form-control\" required=\"required\"/><br /><br />\r\n");
      out.write("\t\r\n");
      out.write("\t<input type=\"submit\" value=\"recharge\" class=\"btn btn-danger\">\r\n");
      out.write("</form>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

Cookie[] ckys=request.getCookies();
if(ckys!=null && ckys.length>1){
	List<Cookie> list = Arrays.asList(ckys);
	List<String> ckysNames=list.stream().filter(cky->cky.getName().equals("mobileNumber")|| cky.getName().equals("plan")).map(Cookie::getValue).collect(Collectors.toList());

	if(ckysNames!=null){
	plan=ckysNames.get(1);
	mobileNumber=ckysNames.get(0);
	System.out.println(ckysNames.get(0));
	System.out.println(ckysNames.get(1));
	}	
}


      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
